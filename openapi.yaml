openapi: 3.1.1
info:
  title: IPNI Multihash Sampling API
  description: This exposes the ability to sample advertisement entries of a provider by context ID deterministically.
  version: 0.0.0
servers:
  - url: 'http://localhost:40080'
paths:
  /ipni/v0/sample/{provider-id}/{context-id}:
    get:
      summary: Sample a set of multihashes ingested by IPNI for a given ContextID.
      parameters:
        - name: provider-id
          in: path
          required: true
          description: The multibase encoded peer ID of the provider.
          example: 12D3KooWN34sqTaMfZE3ReELyVF3no3qU7883Mi6j2VWsv6dwhPL
          schema:
            type: string
        - name: context-id
          in: path
          required: true
          description: The base64 encoded context ID.
          example: AXESIFVcxmAvWdc3BbQUKlYcp2Z2DuO2w5Fo4jmIC8IbMX00
          schema:
            type: string
        - name: beacon
          in: query
          required: false
          description: The hex encoded randomness beacon for deterministic sampling. Ensures repeatability of samples. Must not exceed 32 bytes.
          example: 3439d92d58e47d342131d446a3abe264396dd264717897af30525c98408c834f
          schema:
            type: string
            maxLength: 32
        - name: max
          in: query
          required: false
          description: The maximum number of multihashes to return. If unspecified, at most one multihash is returned.
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: federation_epoch
          in: query
          required: false
          description: The IPNI federation epoch, currently only accepting zero, pending review of IPNI federation protocol.
          schema:
            type: integer
            minimum: 0
            maximum: 0
      responses:
        '200':
          description: 'At least one mutlihash was sampled successfully.'
          content:
            application/json:
              schema:
                example: {
                  "samples": [
                    { "/": "bafy2bzacedrhhowwtcv52pwy72wqnmbgk5sl3muadleyv4zluxdjroi357tq6" },
                    { "/": "bafy2bzacecy44lm6drfx22yun4uweigmab64spc46rncgzy2c5lllmityomxw" },
                    { "/": "bafy2bzaceaao62txgy2vm2e3zpr7xisgdvdyuotjvzmoil5qkhvgjhqcnsn7c" }
                  ]
                }
                type: object
                properties:
                  samples:
                    type: array
                    items:
                      type: object
                      properties:
                        '/':
                          type: string
        '404':
          description: 'No status found for the given ID.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: 'An internal server error occurred.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '503':
          description: 'Service temporarily unavailable. Please try again later.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    error:
      type: object
      properties:
        error:
          type: string
